name: Deploy to VPS

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      action:
        description: "Action to perform"
        required: true
        default: "rebuild"
        type: choice
        options:
          - rebuild     # Incremental build + restart
          - build       # Just build (no restart)
          - start       # Start service
          - stop        # Stop service
          - restart     # Restart service (no build)
          - clean_build # Delete build + full rebuild
          - logs        # Show logs

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # --- Incremental file sync (preserves build directory) ---
      - name: Sync source files to VPS
        uses: burnett01/rsync-deployments@5.2
        with:
          switches: -avz --delete \
            --exclude 'build/' \
            --exclude '.git/' \
            --exclude '.github/' \
            --exclude '.gitignore'
          path: ./
          remote_path: /root/jam
          remote_host: ${{ secrets.VPS_HOST }}
          remote_user: ${{ secrets.VPS_USER }}
          remote_key: ${{ secrets.VPS_KEY }}

      # --- Execute command on VPS ---
      - name: Execute action on VPS
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_KEY }}
          script: |
            set -e
            cd /root/jam

            # Determine action: manual input or auto-rebuild on push
            if [ "${{ github.event_name }}" = "push" ]; then
              ACTION="rebuild"
              echo "üîÑ Auto-deploy triggered by push to main"
            else
              ACTION="${{ github.event.inputs.action }}"
              echo "üéÆ Manual action: $ACTION"
            fi

            case "$ACTION" in
              stop)
                echo "üõë Stopping jam_server.service..."
                systemctl stop jam_server.service || true
                echo "‚úÖ Service stopped."
                ;;

              start)
                echo "üöÄ Starting jam_server.service..."
                systemctl start jam_server.service
                sleep 1
                systemctl status jam_server.service --no-pager || true
                echo "‚úÖ Service started."
                ;;

              restart)
                echo "‚ôªÔ∏è  Restarting jam_server.service (no build)..."
                systemctl restart jam_server.service
                sleep 1
                systemctl status jam_server.service --no-pager || true
                echo "‚úÖ Service restarted."
                ;;

              build)
                echo "üîß Incremental build (keeps dependencies)..."
                mkdir -p build
                cd build
                # Only configure if needed (CMakeCache.txt missing)
                if [ ! -f CMakeCache.txt ]; then
                  echo "üì¶ First-time configuration..."
                  cmake .. -DCMAKE_BUILD_TYPE=Release \
                      -DCMAKE_FETCHCONTENT_BASE_DIR=/root/.cmake_deps
                fi
                # Incremental build - only recompiles changed files
                cmake --build . --parallel $(nproc)
                echo "‚úÖ Build complete."
                ;;

              rebuild)
                echo "üîÑ Incremental build + restart service..."
                systemctl stop jam_server.service || true
                
                mkdir -p build
                cd build
                if [ ! -f CMakeCache.txt ]; then
                  echo "üì¶ First-time configuration..."
                  cmake .. -DCMAKE_BUILD_TYPE=Release \
                      -DCMAKE_FETCHCONTENT_BASE_DIR=/root/.cmake_deps
                fi
                cmake --build . --parallel $(nproc)
                
                cd ..
                systemctl start jam_server.service
                sleep 1
                systemctl status jam_server.service --no-pager || true
                echo "‚úÖ Rebuild + restart complete."
                ;;

              clean_build)
                echo "üß® Full clean build (deletes build directory)..."
                systemctl stop jam_server.service || true
                
                rm -rf build
                mkdir -p build
                cd build
                echo "üì¶ Configuring from scratch..."
                cmake .. -DCMAKE_BUILD_TYPE=Release \
                    -DCMAKE_FETCHCONTENT_BASE_DIR=/root/.cmake_deps
                cmake --build . --parallel $(nproc)
                
                cd ..
                systemctl start jam_server.service
                sleep 1
                systemctl status jam_server.service --no-pager || true
                echo "‚úÖ Clean build + restart complete."
                ;;

              logs)
                echo "üìú Service status:"
                systemctl status jam_server.service --no-pager || true
                echo ""
                echo "üìú Last 50 log lines:"
                journalctl -u jam_server.service -n 50 --no-pager || echo "No logs found."
                ;;

              *)
                echo "‚ùå Unknown action: $ACTION"
                exit 1
                ;;
            esac

            # Show logs after actions (except for 'logs' itself)
            if [ "$ACTION" != "logs" ]; then
              echo ""
              echo "üìú Recent logs:"
              journalctl -u jam_server.service -n 10 --no-pager || echo "No logs found."
            fi
